name: Build QEMU Windows Installer

on:
  workflow_dispatch:
  push:

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    name: Create Release
    runs-on: ubuntu-latest
    permissions: write-all
    outputs:
      timestamp: ${{ steps.get-timestamp.outputs.time }}
      tag_name: ${{ steps.generate_env_vars.outputs.tag_name }}
    steps:
      - name: Get build timestamp
        id: get-timestamp
        run: |
          echo "time=$(/bin/date -u "+%Y-%m-%d")" >> $GITHUB_OUTPUT
      - name: Generate environmental variables
        id: generate_env_vars
        run: |
          echo "tag_name=nixos-image-${{ ( github.event_name == 'push' && 'test' ) || steps.get-timestamp.outputs.time }}" >> $GITHUB_OUTPUT
          echo "release_name=${{ ( github.event_name == 'push' && format('Test Build {0}', steps.get-timestamp.outputs.time) ) || format('Build {0}', steps.get-timestamp.outputs.time) }}" >> $GITHUB_OUTPUT
      - uses: actions/checkout@v4
      - name: Check for existing tag
        id: check-tag
        run: |
          if gh release view "${{ steps.generate_env_vars.outputs.tag_name }}" -R ${{ github.repository }}; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
      - name: Clear previous release
        run: gh release delete ${{ steps.generate_env_vars.outputs.tag_name }} --yes --cleanup-tag -R ${{ github.repository }}
        if: ${{ steps.check-tag.outputs.exists == 'true' }}
      - name: Create new release
        run: |
          gh release create ${{ steps.generate_env_vars.outputs.tag_name }} --title "${{ steps.generate_env_vars.outputs.release_name }}" --generate-notes=false --draft=false --latest=false --prerelease=true

  builds:
    needs: release
    name: Build
    runs-on: ubuntu-latest
    permissions: write-all
    steps:
      - name: Build
        run: |
          docker build https://github.com/physics-enthusiast/qemu.git#win9p-rebase --file ./tests/docker/dockerfiles/fedora-win64-cross.docker --tag=cross-compile:latest
      - uses: addnab/docker-run-action@v3
        with:
          image: cross-compile:latest
          shell: bash
          run: |
            git config --global http.version HTTP/1.1
            git config --global http.postBuffer 157286400
            git clone https://github.com/physics-enthusiast/qemu.git
            cd qemu
            git checkout win9p-rebase
            mkdir build
            cd build
            ../configure --enable-sdl --enable-gtk --disable-werror --disable-docs --disable-plugins --disable-user --enable-fdt=internal --target-list="x86_64-softmmu i386_softmmu aarch64-softmmu arm-softmmu riscv64-softmmu riscv32-softmmu" $QEMU_CONFIGURE_OPTS $EXTRA_CONFIGURE_OPTS
            make -j$(expr $(nproc) + 1)
            make -j$(expr $(nproc) + 1) installer
            ls
          
